name: 🚀 编译 (Build)

on:
  workflow_dispatch:
    inputs:
      owner:
        description: 'ImmortalWrt 仓库的拥有者 (Owner of ImmortalWrt repo)'
        type: string
        required: true
        default: 'padavanonly'
      repo:
        description: 'ImmortalWrt 仓库的名字 (Name of ImmortalWrt repo)'
        type: string
        required: true
        default: 'immortalwrtARM'
      branch:
        description: 'ImmortalWrt 仓库的分支 (Branch of ImmortalWrt repo)'
        type: string
        required: true
        default: 'mt7986'
      multithreading:
        description: '开启多线程编译 (Enable multithreading build)'
        type: boolean
        default: true
      ssh:
        description: '使用 ssh 连接到编译环境 (Connect to the build environment using ssh)'
        type: boolean
        default: false

jobs:
  build:
    if: ${{inputs.ssh == false}}
    runs-on: ubuntu-latest
    name: 🚀 编译 (Build)
    steps:
      - name: 克隆当前仓库 (Clone current repo)
        uses: actions/checkout@v4

      - name: 克隆 ImmortalWrt 仓库 (Clone ImmortalWrt repo)
        uses: actions/checkout@v4
        with:
          repository: '${{inputs.owner}}/${{inputs.repo}}'
          ref: ${{inputs.branch}}
          path: ImmortalWrt

      - name: 复制当前仓库的配置文件到 ImmortalWrt 仓库  (Copy current repo config to ImmortalWrt repo)
        run: cp -f .config feeds.conf.default diy.sh ImmortalWrt/

      - name: 运行 diy.sh (Run diy.sh)
        working-directory: ImmortalWrt
        run: |
          chmod +x diy.sh
          ./diy.sh

      - name: 再次复制当前仓库的配置文件到 ImmortalWrt 仓库 (Copy current repo config to ImmortalWrt repo again)
        run: cp -f .config feeds.conf.default diy.sh ImmortalWrt/

      - name: 编译前上传配置 (Upload config before build)
        uses: actions/upload-artifact@v4
        with:
          name: config-before-build
          path: |
            ImmortalWrt/feeds.conf.default
            ImmortalWrt/.config

      - run: mkdir -p ImmortalWrt/bin/targets && echo abc > ImmortalWrt/bin/targets/abc.txt

      - name: 上传编译结果到 Artifact (Upload build result to Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: ImmortalWrt-build-result
          path: ImmortalWrt/bin/targets

      - name: 打包编译结果 (Package build result)
        run: zip -r ImmortalWrt-build-result.zip ImmortalWrt/bin/targets

      - name: 创建 Tag (Create Tag)
        uses: rickstaa/action-create-tag@v1.7.2
        with:
          tag: v1.0.0
          force_push_tag: true

      - name: 上传编译结果到 Release (Upload build result to Release)
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          artifacts: ImmortalWrt-build-result.zip
          tag: v1.0.0
